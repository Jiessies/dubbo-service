server.port=8082

#spring.aop.proxy-target-class=true

spring.dubbo.application.name=providerJie
spring.dubbo.registry.address=zookeeper://127.0.0.1:2181
#spring.dubbo.registry.address=test.zk01.yktour.com.cn:2181,test.zk02.yktour.com.cn:2182,test.zk03.yktour.com.cn:2183
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.port=20880
spring.dubbo.scan=com.jiespace.dubbo


spring.datasource.url=jdbc:mysql://127.0.0.1:3306/ordercenter?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#pring.datasource.type 用这个配置数据源会导致下面的参数不生效
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initial-size=1
spring.datasource.max-active=20
spring.datasource.min-idle=5
spring.datasource.maxWait=60000
spring.datasource.time-between-eviction-runs-millis=60000
spring.datasource.min-evictable-idle-time-millis=300000
spring.datasource.validation-query=SELECT 'x'
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.pool-prepared-statements=false
spring.datasource.max-open-prepared-statements=20
spring.datasource.filters=stat,wall,log4j

# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

### MYBATIS ###
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.jiespace.domain

tx.manager.url=http://127.0.0.1:7000/tx/manager/

#mybatis.configuration.map-underscore-to-camel-case=true
#配置默认的执行器。SIMPLE 就是普通的执行器；REUSE会重用预处理语句（prepared statements）； BATCH将重用语句并执行批量更新
#SimpleExecutor：每执行一次update或select，就开启一个Statement对象，用完立刻关闭Statement对象。
#ReuseExecutor：执行update或select，以sql作为key查找Statement对象，存在就使用，不存在就创建，用完后，不关闭Statement对象，而是放置于Map<String, Statement>内，供下一次使用。简言之，就是重复使用Statement对象。
#BatchExecutor：执行update（没有select，JDBC批处理不支持select），将所有sql都添加到批处理中（addBatch()），等待统一执行（executeBatch()），它缓存了多个Statement对象，每个Statement对象都是addBatch()完毕后，等待逐一执行executeBatch()批处理。与JDBC批处理相同。
#mybatis.configuration.default-executor-type=batch